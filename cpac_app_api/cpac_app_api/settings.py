"""
Django settings for cpac_app_api project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from dotenv import load_dotenv
from pathlib import Path
from datetime import timedelta

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')
SAMSITE_COOKIE= os.getenv('SAMSITE_COOKIE')
SECURE_COOKIE= os.getenv('SECURE_COOKIE')
DOMAIN=os.getenv('DOMAIN','')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG" , "False")

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS','').split(',')

# ALLOWED_HOSTS = ["cpac-app.onrender.com","localhost","127.0.0.1","https://cpac-calculator-app.vercel.app"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'drf_yasg',
    'authen_api',
    'corsheaders',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        # 'rest_framework.permissions.IsAuthenticated', # ค่าเริ่มต้นที่บังคับให้ต้อง authenticate ทุก endpoint
        'rest_framework.permissions.AllowAny',  # เปลี่ยนค่าเริ่มต้นให้เข้าถึงได้หมด
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30), # ระยะเวลาของ Access Token คือ 1 ชั่วโมง
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1), # ระยะเวลาของ Refresh Token คือ 1 วัน
    'ROTATE_REFRESH_TOKENS': True, # หมุนเวลา Refresh Token
    'BLACKLIST_AFTER_ROTATION': True,  # เปิดใช้งานการตรวจสอบ blacklist
    'ALGORITHM': 'HS256', # อัลกอริธึมสำหรับการเข้ารหัส
    'SIGNING_KEY': SECRET_KEY, # คีย์สำหรับการเข้ารหัส    
    'AUTH_HEADER_TYPES': ('Bearer',), # ประเภทของส่วนหัวสำหรับการอนุญาต
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',), # คลาสของสิทธิ์การเข้าสู่ระบบ
    'UPDATE_LAST_LOGIN': True,  # อัพเดทเวลาการเข้าสู่ระบบครั้งสุดท้าย
}


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cpac_app_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cpac_app_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Supabase
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': os.getenv('DB_NAME', 'postgres'),
#         'USER': os.getenv('DB_USER'),
#         'PASSWORD': os.getenv('DB_PASSWORD'),
#         'HOST': os.getenv('DB_HOST'),
#         'PORT': os.getenv('DB_PORT', '6543'),
#         'OPTIONS': {
#             'options': '-c timezone=Asia/Bangkok'
#         },
#     },
# }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Bangkok'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# settings.py
STATIC_ROOT = BASE_DIR / "staticfiles"


# ถ้าต้องการให้ส่ง cookie/token ไปด้วย
CORS_ALLOW_CREDENTIALS = True
# Http OnlyCookie
CSRF_COOKIE_SECURE = SECURE_COOKIE
SESSION_COOKIE_SECURE = SECURE_COOKIE
CSRF_COOKIE_SAMESITE = SAMSITE_COOKIE
SESSION_COOKIE_SAMESITE = SAMSITE_COOKIE
SESSION_COOKIE_HTTPONLY = True
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",
    "https://cpac-app.vercel.app",
    "https://cpac-app.onrender.com",
]

# Domain Setting
SESSION_COOKIE_DOMAIN=DOMAIN
CSRF_COOKIE_DOMAIN=DOMAIN

# ตั้งค่าการอนุญาต CORS
# อนุญาตทุกโดเมนให้เข้าถึง (เปิด CORS ทั้งหมด)
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # สำหรับ dev
    "https://cpac-app.onrender.com",  # ถ้าเว็บ frontend deploy แล้ว
    "https://cpac-app.vercel.app",  # domain ของ frontend
]

# CORS_ALLOWED_ORIGINS = os.getenv('CORS_ALLOWED_ORIGINS').split(',')


# ถ้าต้องการกำหนด HTTP Methods ที่อนุญาต เช่น GET, POST, PUT, PATCH, DELETE
CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    # "PUT",
    "PATCH",
    "DELETE",
    # "OPTIONS",
]

# ถ้าต้องการกำหนด Headers ที่อนุญาต เช่น Authorization, Content-Type
CORS_ALLOW_HEADERS = [
    "content-type",
    "authorization",
    "x-csrftoken",
    "x-requested-with",
]

ACCESS_CONTROL_ALLOW_CREDENTIALS=os.getenv("ACCESS_CONTROL_ALLOW_CREDENTIALS","True")

# ตั้งค่า Swagger
# SWAGGER_SETTINGS = {
#     'USE_SESSION_AUTH': False,  # ปิดการใช้งาน Django Login
#     'SECURITY_DEFINITIONS': {
#         'Bearer': {
#             'type': 'apiKey',
#             'name': 'Authorization',
#             'in': 'header'
#         }
#     },
#     'SECURITY': [
#         {
#             'Bearer': []
#         }
#     ]
# }

